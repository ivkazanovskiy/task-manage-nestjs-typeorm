import { Exclude } from 'class-transformer';
import { User } from 'src/auth/user.entity';
import {
  BaseEntity,
  Column,
  Entity,
  ManyToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { ETaskStatus } from './task-status.enum';

@Entity()
export class Task {
  // primary key and autogenerated value
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  title: string;

  @Column()
  description: string;

  @Column()
  status: ETaskStatus;

  @ManyToOne((_type) => User, (user) => user.tasks)
  // for example tasks/create returns task.user entity.
  // this decorator excludes 'user' field when some piece of code
  // convert class to plain object (and our global interceptor does it)
  @Exclude({ toPlainOnly: true })
  user: User;
}
